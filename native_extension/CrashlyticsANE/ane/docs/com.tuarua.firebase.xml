<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.firebase"><apiName>com.tuarua.firebase</apiName><apiDetail/><apiClassifier id="com.tuarua.firebase:CrashlyticsANE"><apiName>CrashlyticsANE</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase:CrashlyticsANE:CrashlyticsANE"><apiName>CrashlyticsANE</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.firebase:CrashlyticsANE:crash"><apiName>crash</apiName><shortdesc>
      The easiest way to cause a crash - great for testing!
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      The easiest way to cause a crash - great for testing!
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:CrashlyticsANE:dispose"><apiName>dispose</apiName><shortdesc> Disposes the ANE </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Disposes the ANE </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:CrashlyticsANE:logException"><apiName>logException</apiName><shortdesc>
      This method can be used to record a single exception structure in a report.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>error</apiItemName><apiType value="Error"/><apiDesc>The custom Error
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      This method can be used to record a single exception structure in a report.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:CrashlyticsANE:log"><apiName>log</apiName><shortdesc>
      This method can be used to record a non-fatal error message.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>The message
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      This method can be used to record a non-fatal error message. Android Only.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:CrashlyticsANE:setBool"><apiName>setBool</apiName><shortdesc>
      Set an Boolean value for a key to be associated with your crash data which will be visible in the Crashlytics UI.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>key</apiItemName><apiType value="String"/><apiDesc>The Boolean value to be set
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Boolean"/><apiDesc>The key with which to associate the value
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      Set an Boolean value for a key to be associated with your crash data which will be visible in the Crashlytics UI.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:CrashlyticsANE:setDouble"><apiName>setDouble</apiName><shortdesc>
      Set an double value for a key to be associated with your crash data which will be visible in the Crashlytics UI.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>key</apiItemName><apiType value="String"/><apiDesc>The float value to be set
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>The key with which to associate the value
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      Set an double value for a key to be associated with your crash data which will be visible in the Crashlytics UI.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:CrashlyticsANE:setInt"><apiName>setInt</apiName><shortdesc>
      Set an int value for a key to be associated with your crash data which will be visible in the Crashlytics UI.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>key</apiItemName><apiType value="String"/><apiDesc>The integer value to be set
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="int"/><apiDesc>The key with which to associate the value
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      Set an int value for a key to be associated with your crash data which will be visible in the Crashlytics UI.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:CrashlyticsANE:setString"><apiName>setString</apiName><shortdesc>
      Set a String value for a for a key to be associated with your crash data which will be visible in the Crashlytics UI.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>key</apiItemName><apiType value="String"/><apiDesc>The String to be associated with the key
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>  The key with which to associate the value
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      Set a String value for a for a key to be associated with your crash data which will be visible in the Crashlytics UI.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:CrashlyticsANE:crashlytics:get"><apiName>crashlytics</apiName><shortdesc> The ANE instance.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.firebase:CrashlyticsANE</apiValueClassifier></apiValueDef><apiDesc> The ANE instance. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:CrashlyticsANE:debug:get"><apiName>debug</apiName><shortdesc>
      This Boolean enables or disables debug logging, such as kit version information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      This Boolean enables or disables debug logging, such as kit version information. The default value is false.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:CrashlyticsANE:userEmail:set"><apiName>userEmail</apiName><shortdesc>
      Specify a user email which will be visible in the Crashlytics UI.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="String"/></apiValueDef><apiDesc>
      Specify a user email which will be visible in the Crashlytics UI.
      Please be mindful of your end-user's privacy and see if setUserIdentifier: can fulfil your needs.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="setUserIdentifier.set.xml"><linktext>setUserIdentifier:</linktext></link></related-links></apiValue><apiValue id="com.tuarua.firebase:CrashlyticsANE:userIdentifier:set"><apiName>userIdentifier</apiName><shortdesc>
      Specify a user identifier which will be visible in the Crashlytics UI.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="String"/></apiValueDef><apiDesc>
      Specify a user identifier which will be visible in the Crashlytics UI.
     
      Many of our customers have requested the ability to tie crashes to specific end-users of their
      application in order to facilitate responses to support requests or permit the ability to reach
      out for more information. We allow you to specify up to three separate values for display within
      the Crashlytics UI - but please be mindful of your end-user's privacy.
     
      We recommend specifying a user identifier - an arbitrary string that ties an end-user to a record
      in your system. This could be a database id, hash, or other value that is meaningless to a
      third-party observer but can be indexed and queried by you.
     
      Optionally, you may also specify the end-user's name or username, as well as email address if you
      do not have a system that works well with obscured identifiers.
     
      Pursuant to our EULA, this data is transferred securely throughout our system and we will not
      disseminate end-user data unless required to by law. That said, if you choose to provide end-user
      contact information, we strongly recommend that you disclose this in your application's privacy
      policy. Data privacy is of our utmost concern.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:CrashlyticsANE:userName:set"><apiName>userName</apiName><shortdesc>
      Specify a user name which will be visible in the Crashlytics UI.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="String"/></apiValueDef><apiDesc>
      Specify a user name which will be visible in the Crashlytics UI.
      Please be mindful of your end-user's privacy and see if setUserIdentifier: can fulfil your needs.
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="setUserIdentifier.set.xml"><linktext>setUserIdentifier:</linktext></link></related-links></apiValue></apiClassifier></apiPackage>