<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.firebase.vision"><apiName>com.tuarua.firebase.vision</apiName><apiDetail/><apiClassifier id="com.tuarua.firebase.vision:CloudDocumentRecognizerOptions"><apiName>CloudDocumentRecognizerOptions</apiName><shortdesc>
 Options for a cloud document text recognizer.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Options for a cloud document text recognizer.
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:CloudDocumentRecognizerOptions:CloudDocumentRecognizerOptions"><apiName>CloudDocumentRecognizerOptions</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:CloudDocumentRecognizerOptions:apiKeyOverride"><apiName>apiKeyOverride</apiName><shortdesc>
     API key to use for Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     API key to use for Cloud Vision API. If <codeph>null</codeph>, the default API key from FirebaseApp will be
     used.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudDocumentRecognizerOptions:enforceCertFingerprintMatch"><apiName>enforceCertFingerprintMatch</apiName><shortdesc>
     Only allow registered application instances with matching certificate fingerprint to use Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Only allow registered application instances with matching certificate fingerprint to use Cloud Vision API.
     <p>Do not set this for debug build if you use simulators to test.</p>
     <p>Applies to Android only.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudDocumentRecognizerOptions:languageHints"><apiName>languageHints</apiName><shortdesc>
     An array of hinted language codes for cloud document text recognition.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$String"/></apiValueDef><apiDesc>
     An array of hinted language codes for cloud document text recognition. The default is <codeph>null</codeph>. See
     https://cloud.google.com/vision/docs/languages for supported language codes.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:FaceDetectorPerformanceMode"><apiName>FaceDetectorPerformanceMode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:FaceDetectorPerformanceMode:accurate"><apiName>accurate</apiName><shortdesc>
     Face detection mode code indicating detect more faces and may be more precise in determining
     values such as position, at the cost of speed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face detection mode code indicating detect more faces and may be more precise in determining
     values such as position, at the cost of speed.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorPerformanceMode:fast"><apiName>fast</apiName><shortdesc>
     Face detection mode code indicating detect fewer faces and may be less precise in determining
     values such as position, but will run faster.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face detection mode code indicating detect fewer faces and may be less precise in determining
     values such as position, but will run faster.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:TextRecognizedBreakType"><apiName>TextRecognizedBreakType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreakType:hyphen"><apiName>hyphen</apiName><shortdesc>
     Hyphen break type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Hyphen break type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreakType:lineBreak"><apiName>lineBreak</apiName><shortdesc>
     Line break that ends a paragraph.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Line break that ends a paragraph.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreakType:lineWrap"><apiName>lineWrap</apiName><shortdesc>
     Line-wrapping break type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Line-wrapping break type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreakType:space"><apiName>space</apiName><shortdesc>
     Space break type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Space break type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreakType:sureSpace"><apiName>sureSpace</apiName><shortdesc>
     Sure space break type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Sure space break type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreakType:unknown"><apiName>unknown</apiName><shortdesc>
     Unknown break type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Unknown break type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:TextError"><apiName>TextError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:TextError:TextError"><apiName>TextError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:TextRecognizedBreak"><apiName>TextRecognizedBreak</apiName><shortdesc>
 Detected break from text recognition.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Detected break from text recognition.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreak:isPrefix"><apiName>isPrefix</apiName><shortdesc>
     Indicates whether the break prepends the text element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Indicates whether the break prepends the text element. If <codeph>false</codeph>, the break comes after the text
     element.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextRecognizedBreak:type"><apiName>type</apiName><shortdesc>
      The recognized text break type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc>
      The recognized text break type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:LatitudeLongitude"><apiName>LatitudeLongitude</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:LatitudeLongitude:LatitudeLongitude"><apiName>LatitudeLongitude</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:LatitudeLongitude:latitude"><apiName>latitude</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:LatitudeLongitude:longitude"><apiName>longitude</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:FaceDetectorClassificationMode"><apiName>FaceDetectorClassificationMode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:FaceDetectorClassificationMode:all"><apiName>all</apiName><shortdesc>
     Face classification type indicating it performs all classification.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face classification type indicating it performs all classification.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorClassificationMode:none"><apiName>none</apiName><shortdesc>
     Face classification type indicating it performs no classification.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face classification type indicating it performs no classification.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeEmail"><apiName>BarcodeEmail</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeEmail:address"><apiName>address</apiName><shortdesc>
     Email message address.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Email message address.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeEmail:body"><apiName>body</apiName><shortdesc>
     Email message body.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Email message body.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeEmail:subject"><apiName>subject</apiName><shortdesc>
     Email message subject.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Email message subject.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeEmail:type"><apiName>type</apiName><shortdesc>
     Email message type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
     Email message type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:DocumentBlockType"><apiName>DocumentBlockType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:DocumentBlockType:barcode"><apiName>barcode</apiName><shortdesc>
     Barcode document text block type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Barcode document text block type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentBlockType:picture"><apiName>picture</apiName><shortdesc>
     Image document text block type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Image document text block type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentBlockType:ruler"><apiName>ruler</apiName><shortdesc>
     Horizontal/vertical line box document text block type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Horizontal/vertical line box document text block type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentBlockType:table"><apiName>table</apiName><shortdesc>
     Table document text block type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Table document text block type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentBlockType:text"><apiName>text</apiName><shortdesc>
     Regular document text block type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Regular document text block type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentBlockType:unknown"><apiName>unknown</apiName><shortdesc>
     Unknown document text block type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Unknown document text block type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeValueType"><apiName>BarcodeValueType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase.vision:BarcodeValueType:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:ISBN"><apiName>ISBN</apiName><shortdesc>
     Barcode value type for ISBNs.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for ISBNs.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:SMS"><apiName>SMS</apiName><shortdesc>
     Barcode value type for SMS details.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for SMS details.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:calendarEvent"><apiName>calendarEvent</apiName><shortdesc>
     Barcode value type for calendar events.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for calendar events.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:contactInfo"><apiName>contactInfo</apiName><shortdesc>
     Barcode value type for contact info.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for contact info.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:driversLicense"><apiName>driversLicense</apiName><shortdesc>
     Barcode value type for driver's license data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for driver's license data.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:email"><apiName>email</apiName><shortdesc>
     Barcode value type for email addresses.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for email addresses.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:geographicCoordinates"><apiName>geographicCoordinates</apiName><shortdesc>
     Barcode value type for geographic coordinates.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for geographic coordinates.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:phone"><apiName>phone</apiName><shortdesc>
     Barcode value type for phone numbers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for phone numbers.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:product"><apiName>product</apiName><shortdesc>
     Barcode value type for product codes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for product codes.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:text"><apiName>text</apiName><shortdesc>
     Barcode value type for plain text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for plain text.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:unknown"><apiName>unknown</apiName><shortdesc>
     Unknown Barcode value types.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Unknown Barcode value types.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:url"><apiName>url</apiName><shortdesc>
     Barcode value type for URLs/bookmarks.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for URLs/bookmarks.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeValueType:wifi"><apiName>wifi</apiName><shortdesc>
     Barcode value type for Wi-Fi access point details.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode value type for Wi-Fi access point details.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:DocumentTextBlock"><apiName>DocumentTextBlock</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:DocumentTextBlock:confidence"><apiName>confidence</apiName><shortdesc>
     The confidence of the recognized document text block.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence of the recognized document text block.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextBlock:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that contains the document text block relative to the image in the default
     coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that contains the document text block relative to the image in the default
     coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextBlock:recognizedBreak"><apiName>recognizedBreak</apiName><shortdesc>
     The recognized start or end of the document text block.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:TextRecognizedBreak</apiValueClassifier></apiValueDef><apiDesc>
     The recognized start or end of the document text block.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextBlock:recognizedLanguages"><apiName>recognizedLanguages</apiName><shortdesc>
     An array of recognized languages in the document text block.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextRecognizedLanguage"/></apiValueDef><apiDesc>
     An array of recognized languages in the document text block. If no languages are recognized, the
     array is empty.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextBlock:text"><apiName>text</apiName><shortdesc>
     String representation of the document text block that was recognized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the document text block that was recognized.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextBlock:type"><apiName>type</apiName><shortdesc>
     The detected block type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc>
     The detected block type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextBlock:paragraphs:get"><apiName>paragraphs</apiName><shortdesc>
     An array of paragraphs in the block if the type is DocumentBlockType.text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$com.tuarua.firebase.vision:DocumentTextParagraph"/></apiValueDef><apiDesc>
     An array of paragraphs in the block if the type is <codeph>DocumentBlockType.text</codeph>. Otherwise,
     the array is empty.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeDriverLicense"><apiName>BarcodeDriverLicense</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:expiryDate"><apiName>expiryDate</apiName><shortdesc>
     Driver license expiration date.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Driver license expiration date. The date format depends on the issuing country.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:firstName"><apiName>firstName</apiName><shortdesc>
     Holder's first name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Holder's first name.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:gender"><apiName>gender</apiName><shortdesc>
     Holder's gender.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Holder's gender. 1 is male and 2 is female.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:issuingCountry"><apiName>issuingCountry</apiName><shortdesc>
     A country in which DL/ID was issued.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     A country in which DL/ID was issued.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:issuingDate"><apiName>issuingDate</apiName><shortdesc>
     The date format depends on the issuing country.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     The date format depends on the issuing country.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:lastName"><apiName>lastName</apiName><shortdesc>
     Holder's last name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Holder's last name.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:licenseNumber"><apiName>licenseNumber</apiName><shortdesc>
     Driver license ID number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Driver license ID number.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeDriverLicense:middleName"><apiName>middleName</apiName><shortdesc>
     Holder's middle name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Holder's middle name.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeWifi"><apiName>BarcodeWifi</apiName><shortdesc>
 Wi-Fi network parameters from a 'WIFI:' or similar QR Code type.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Wi-Fi network parameters from a 'WIFI:' or similar QR Code type.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeWifi:password:get"><apiName>password</apiName><shortdesc>
     A Wi-Fi access point password.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     A Wi-Fi access point password.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeWifi:ssid:get"><apiName>ssid</apiName><shortdesc>
     A Wi-Fi access point SSID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     A Wi-Fi access point SSID.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeWifi:type:get"><apiName>type</apiName><shortdesc>
     A Wi-Fi access point encryption type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
     A Wi-Fi access point encryption type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeSMS"><apiName>BarcodeSMS</apiName><shortdesc>
 An SMS message from an 'SMS:' or similar QR Code type.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 An SMS message from an 'SMS:' or similar QR Code type.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeSMS:message:get"><apiName>message</apiName><shortdesc>
     An SMS message body.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     An SMS message body.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeSMS:phoneNumber:get"><apiName>phoneNumber</apiName><shortdesc>
     An SMS message phone number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     An SMS message phone number.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeURLBookmark"><apiName>BarcodeURLBookmark</apiName><shortdesc>
 A URL and title from a 'MEBKM:' or similar QR Code type.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A URL and title from a 'MEBKM:' or similar QR Code type.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeURLBookmark:title:get"><apiName>title</apiName><shortdesc>
     A URL bookmark title.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     A URL bookmark title.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeURLBookmark:url:get"><apiName>url</apiName><shortdesc>
     A URL bookmark url.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     A URL bookmark url.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:CloudTextRecognizerOptions"><apiName>CloudTextRecognizerOptions</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:CloudTextRecognizerOptions:CloudTextRecognizerOptions"><apiName>CloudTextRecognizerOptions</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:CloudTextRecognizerOptions:apiKeyOverride"><apiName>apiKeyOverride</apiName><shortdesc>
     API key to use for Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     API key to use for Cloud Vision API.  If <codeph>null</codeph>, the default API key from FirebaseApp will be
     used.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudTextRecognizerOptions:enforceCertFingerprintMatch"><apiName>enforceCertFingerprintMatch</apiName><shortdesc>
     Only allow registered application instances with matching certificate fingerprint to use Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Only allow registered application instances with matching certificate fingerprint to use Cloud Vision API.
     <p>Do not set this for debug build if you use simulators to test.</p>
     <p>Applies to Android only.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudTextRecognizerOptions:languageHints"><apiName>languageHints</apiName><shortdesc>
     An array of hinted language codes for cloud text recognition.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$String"/></apiValueDef><apiDesc>
     An array of hinted language codes for cloud text recognition. The default is []. See
     https://cloud.google.com/vision/docs/languages for supported language codes.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudTextRecognizerOptions:modelType"><apiName>modelType</apiName><shortdesc>
     Model type for cloud text recognition.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc>
     Model type for cloud text recognition. The default is <codeph>CloudTextModelType.sparse</codeph>.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:LabelDetectorOptions"><apiName>LabelDetectorOptions</apiName><shortdesc>
 Options for an image label detector.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Options for an image label detector.
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:LabelDetectorOptions:LabelDetectorOptions"><apiName>LabelDetectorOptions</apiName><shortdesc>
     Creates a new instance with the given detector options.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>confidenceThreshold</apiItemName><apiType value="Number"/><apiData>0.5</apiData><apiDesc>The confidence threshold for labels returned by the label detector.
         Features returned by the label detector will have a confidence higher or equal to the given
         threshold. Values must be in range [0, 1]. If an invalid value is provided, the default
         threshold of 0.5 is used.
     </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Creates a new instance with the given detector options.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:LabelDetectorOptions:confidenceThreshold:get"><apiName>confidenceThreshold</apiName><shortdesc>
     The confidence threshold for labels returned by the label detector.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence threshold for labels returned by the label detector. Features returned by the
     label detector will have a confidence higher or equal to the confidence threshold. Default value
     is 0.5.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:FaceDetectorLandmarkMode"><apiName>FaceDetectorLandmarkMode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:FaceDetectorLandmarkMode:all"><apiName>all</apiName><shortdesc>
     Face landmark detection type indicating it performs all landmark detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face landmark detection type indicating it performs all landmark detection.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorLandmarkMode:none"><apiName>none</apiName><shortdesc>
     Face landmark detection type indicating it performs no landmark detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face landmark detection type indicating it performs no landmark detection.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:DocumentTextWord"><apiName>DocumentTextWord</apiName><shortdesc>
 A document text word recognized in an image that consists of an array of symbols.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A document text word recognized in an image that consists of an array of symbols.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:DocumentTextWord:confidence"><apiName>confidence</apiName><shortdesc>
     The confidence of the recognized document text word.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence of the recognized document text word.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextWord:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that contains the document text word relative to the image in the default
     coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that contains the document text word relative to the image in the default
     coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextWord:recognizedBreak"><apiName>recognizedBreak</apiName><shortdesc>
     The recognized start or end of the document text word.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:TextRecognizedBreak</apiValueClassifier></apiValueDef><apiDesc>
     The recognized start or end of the document text word.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextWord:recognizedLanguages"><apiName>recognizedLanguages</apiName><shortdesc>
     An array of recognized languages in the document text word.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextRecognizedLanguage"/></apiValueDef><apiDesc>
     An array of recognized languages in the document text word. If no languages are recognized, the
     array is empty.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextWord:text"><apiName>text</apiName><shortdesc>
     String representation of the document text word that was recognized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the document text word that was recognized.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextWord:symbols:get"><apiName>symbols</apiName><shortdesc>
     An array of symbols in the document text word.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$com.tuarua.firebase.vision:DocumentTextSymbol"/></apiValueDef><apiDesc>
     An array of symbols in the document text word.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:Barcode"><apiName>Barcode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:Barcode:Barcode"><apiName>Barcode</apiName><shortdesc> private </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> private </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:Barcode:calendarEvent"><apiName>calendarEvent</apiName><shortdesc>
     A calendar event extracted from a QR Code.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeCalendarEvent</apiValueClassifier></apiValueDef><apiDesc>
     <p>A calendar event extracted from a QR Code. This property is only set if valueType is
     .calendarEvent.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:contactInfo"><apiName>contactInfo</apiName><shortdesc>
     A person's or organization's business card.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeContactInfo</apiValueClassifier></apiValueDef><apiDesc>
     <p>A person's or organization's business card. For example a VCARD. This property is only set
     if valueType is .contactInfo.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:cornerPoints"><apiName>cornerPoints</apiName><shortdesc>
     The four corner points of the barcode, in clockwise order starting with the top left relative
     to the detected image in the view coordinate system.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$flash.geom:Point"/></apiValueDef><apiDesc>
     <p>The four corner points of the barcode, in clockwise order starting with the top left relative
     to the detected image in the view coordinate system. These are <codeph>flash.geom.Point</codeph> boxed in values.
     Due to the possible perspective distortions, this is not necessarily a rectangle.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:displayValue"><apiName>displayValue</apiName><shortdesc>
     A barcode value in a user-friendly format.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     <p>A barcode value in a user-friendly format. May omit some of the information encoded in the
     barcode. For example, in the case above the display value might be 'https://www.google.com'.
     If valueType == .text, this field will be equal to rawValue. This value may be multiline,
     for example, when line breaks are encoded into the original TEXT barcode value. May include
     the supplement value.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:driverLicense"><apiName>driverLicense</apiName><shortdesc>
     A driver license or ID card.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeDriverLicense</apiValueClassifier></apiValueDef><apiDesc>
     <p>A driver license or ID card. This property is only set if valueType is .driverLicense.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:email"><apiName>email</apiName><shortdesc>
     An email message from a 'MAILTO:' or similar QR Code type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeEmail</apiValueClassifier></apiValueDef><apiDesc>
     <p>An email message from a 'MAILTO:' or similar QR Code type. This property is only set if
     valueType is .email.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:format"><apiName>format</apiName><shortdesc>
     A barcode format; for example, EAN_13.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
     <p>A barcode format; for example, EAN_13. Note that if the format is not in the list,
     VisionBarcodeFormat.unknown would be returned.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:frame"><apiName>frame</apiName><shortdesc> The rectangle that holds the discovered relative to the detected image in the view coordinate system.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc> The rectangle that holds the discovered relative to the detected image in the view coordinate system. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:geoPoint"><apiName>geoPoint</apiName><shortdesc>
     GPS coordinates from a 'GEO:' or similar QR Code type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeGeoPoint</apiValueClassifier></apiValueDef><apiDesc>
     <p>GPS coordinates from a 'GEO:' or similar QR Code type. This property is only set if valueType
     is .geo.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:phone"><apiName>phone</apiName><shortdesc>
     A phone number from a 'TEL:' or similar QR Code type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodePhone</apiValueClassifier></apiValueDef><apiDesc>
     <p>A phone number from a 'TEL:' or similar QR Code type. This property is only set if valueType
     is .phone.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:rawValue"><apiName>rawValue</apiName><shortdesc>
     A barcode value as it was encoded in the barcode.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     <p>A barcode value as it was encoded in the barcode. Structured values are not parsed, for example:
     'MEBKM:TITLE:Google;URL:https://www.google.com;;'. Does not include the supplemental value.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:sms"><apiName>sms</apiName><shortdesc>
     An SMS message from an 'SMS:' or similar QR Code type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeSMS</apiValueClassifier></apiValueDef><apiDesc>
     <p>An SMS message from an 'SMS:' or similar QR Code type. This property is only set if valueType
     is .sms.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:url"><apiName>url</apiName><shortdesc>
     A URL and title from a 'MEBKM:' or similar QR Code type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeURLBookmark</apiValueClassifier></apiValueDef><apiDesc>
     <p>A URL and title from a 'MEBKM:' or similar QR Code type. This property is only set if
     valueType is .url.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:valueType"><apiName>valueType</apiName><shortdesc>
     A type of the barcode value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
     <p>A type of the barcode value. For example, TEXT, PRODUCT, URL, etc. Note that if the type is not
     in the list, .unknown would be returned.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Barcode:wifi"><apiName>wifi</apiName><shortdesc>
     Wi-Fi network parameters from a 'WIFI:' or similar QR Code type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeWifi</apiValueClassifier></apiValueDef><apiDesc>
     <p>Wi-Fi network parameters from a 'WIFI:' or similar QR Code type. This property is only set
     if valueType is .wifi.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:TextBlock"><apiName>TextBlock</apiName><shortdesc>
 A text block recognized in an image that consists of an array of text lines.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A text block recognized in an image that consists of an array of text lines.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:TextBlock:confidence"><apiName>confidence</apiName><shortdesc>
     The confidence of the recognized text block.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence of the recognized text block. The value is 0 for all text recognizers except
     for cloud text recognizers with model type <codeph>CloudTextModelType.dense</codeph>.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextBlock:cornerPoints"><apiName>cornerPoints</apiName><shortdesc>
     The four corner points of the text block in clockwise order starting with the top left point
     relative to the image in the default coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$flash.geom:Point"/></apiValueDef><apiDesc>
     The four corner points of the text block in clockwise order starting with the top left point
     relative to the image in the default coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextBlock:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that contains the text block relative to the image in the default coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that contains the text block relative to the image in the default coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextBlock:lines"><apiName>lines</apiName><shortdesc>
     An array of text lines that make up the block.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextLine"/></apiValueDef><apiDesc>
     An array of text lines that make up the block.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextBlock:recognizedLanguages"><apiName>recognizedLanguages</apiName><shortdesc>
     An array of recognized languages in the text block.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextRecognizedLanguage"/></apiValueDef><apiDesc>
     An array of recognized languages in the text block. On-device text recognizers only detect
     Latin-based languages, while cloud text recognizers can detect multiple languages. If no
     languages are recognized, the array is empty.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextBlock:text"><apiName>text</apiName><shortdesc>
     String representation of the text block that was recognized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the text block that was recognized.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:ImageLabel"><apiName>ImageLabel</apiName><shortdesc>
 Represents a label for an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Represents a label for an image.
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:ImageLabel:ImageLabel"><apiName>ImageLabel</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:ImageLabel:confidence"><apiName>confidence</apiName><shortdesc>
     Confidence for the label in range [0, 1].</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Confidence for the label in range [0, 1].
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:ImageLabel:entityId"><apiName>entityId</apiName><shortdesc>
     Opaque entity ID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API].
     (https://developers.google.com/knowledge-graph/).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:ImageLabel:text"><apiName>text</apiName><shortdesc>
     The human readable label string in American English.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     <p>The human readable label string in American English. For example: "Balloon".</p>
     
     <p>Note: this is not fit for display purposes, as it is not localized. Use the <codeph>entityId</codeph> and query
     the Knowledge Graph to get a localized description of the label.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:CloudModelType"><apiName>CloudModelType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:CloudModelType:CloudModelType"><apiName>CloudModelType</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:CloudModelType:latest"><apiName>latest</apiName><shortdesc> Latest model.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc> Latest model. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudModelType:stable"><apiName>stable</apiName><shortdesc> Stable model.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc> Stable model. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeDetectorOptions"><apiName>BarcodeDetectorOptions</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:BarcodeDetectorOptions:BarcodeDetectorOptions"><apiName>BarcodeDetectorOptions</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:BarcodeDetectorOptions:formats"><apiName>formats</apiName><shortdesc>
     The barcode formats detected in an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$int"/></apiValueDef><apiDesc>
     The barcode formats detected in an image. Note that the detection time will increase for each
     additional format that is specified.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:CloudLabelDetectorOptions"><apiName>CloudLabelDetectorOptions</apiName><shortdesc>
 Options for an image label detector.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Options for an image label detector.
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:CloudLabelDetectorOptions:CloudLabelDetectorOptions"><apiName>CloudLabelDetectorOptions</apiName><shortdesc>
     Creates a new instance with the given detector options.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>confidenceThreshold</apiItemName><apiType value="Number"/><apiData>0.5</apiData><apiDesc>The confidence threshold for labels returned by the label detector.
         Features returned by the label detector will have a confidence higher or equal to the given
         threshold. Values must be in range [0, 1]. If an invalid value is provided, the default
         threshold of 0.5 is used.
     </apiDesc></apiParam><apiParam><apiItemName>enforceCertFingerprintMatch</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Only allow registered application instances with matching certificate
     fingerprint to use Cloud Vision API.
     <p>Do not set this for debug build if you use simulators to test.</p>
     Applies to Android only.
     </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Creates a new instance with the given detector options.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:CloudLabelDetectorOptions:apiKeyOverride"><apiName>apiKeyOverride</apiName><shortdesc>
     API key to use for Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     API key to use for Cloud Vision API.  If <codeph>null</codeph>, the default API key from FirebaseApp will be
     used.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudLabelDetectorOptions:confidenceThreshold:get"><apiName>confidenceThreshold</apiName><shortdesc>
     The confidence threshold for labels returned by the label detector.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence threshold for labels returned by the label detector. Features returned by the
     label detector will have a confidence higher or equal to the confidence threshold. Default value
     is 0.5.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudLabelDetectorOptions:enforceCertFingerprintMatch:get"><apiName>enforceCertFingerprintMatch</apiName><shortdesc>
     Only allow registered application instances with matching certificate
     fingerprint to use Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Only allow registered application instances with matching certificate
     fingerprint to use Cloud Vision API.
     <p>Do not set this for debug build if you use simulators to test.</p>
     <p>Applies to Android only.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodePhone"><apiName>BarcodePhone</apiName><shortdesc>
 A phone number from a 'TEL:' or similar QR Code type.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A phone number from a 'TEL:' or similar QR Code type.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodePhone:number:get"><apiName>number</apiName><shortdesc>
     Phone number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     Phone number.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodePhone:type:get"><apiName>type</apiName><shortdesc>
     Phone number type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
     Phone number type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:TextElement"><apiName>TextElement</apiName><shortdesc>
 A text element recognized in an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A text element recognized in an image. A text element is roughly equivalent to a space-separated
 word in most Latin-script languages.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:TextElement:confidence"><apiName>confidence</apiName><shortdesc>
     The confidence of the recognized text element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence of the recognized text element. The value is 0 for all text recognizers except
     for cloud text recognizers with model type <codeph>VisionCloudTextModelType.dense</codeph>.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextElement:cornerPoints"><apiName>cornerPoints</apiName><shortdesc>
     The four corner points of the text element in clockwise order starting with the top left point
     relative to the image in the default coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$flash.geom:Point"/></apiValueDef><apiDesc>
     The four corner points of the text element in clockwise order starting with the top left point
     relative to the image in the default coordinate space. The objects are <codeph>flash.geom.Point</codeph>s.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextElement:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that contains the text element relative to the image in the default coordinate
     space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that contains the text element relative to the image in the default coordinate
     space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextElement:lines"><apiName>lines</apiName><shortdesc>
     An array of text lines that make up the block.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextLine"/></apiValueDef><apiDesc>
     An array of text lines that make up the block.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextElement:recognizedLanguages"><apiName>recognizedLanguages</apiName><shortdesc>
     An array of recognized languages in the text element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextRecognizedLanguage"/></apiValueDef><apiDesc>
     An array of recognized languages in the text element. On-device text recognizers only detect
     Latin-based languages, while cloud text recognizers can detect multiple languages. If no
     languages are recognized, the array is empty.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextElement:text"><apiName>text</apiName><shortdesc>
     String representation of the text element that was recognized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the text element that was recognized.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:VisionPoint"><apiName>VisionPoint</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:VisionPoint:VisionPoint"><apiName>VisionPoint</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>z</apiItemName><apiType value="Number"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:VisionPoint:x:get"><apiName>x</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:VisionPoint:y:get"><apiName>y</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:VisionPoint:z:get"><apiName>z</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:Face"><apiName>Face</apiName><shortdesc>
 A human face detected in an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A human face detected in an image.
 </apiDesc></apiClassifierDetail><apiOperation id="com.tuarua.firebase.vision:Face:landmark"><apiName>landmark</apiName><shortdesc>
     Returns the landmark, if any, of the given type in this detected face.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The landmark of the given type in this face.  nil if there isn't one.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase.vision:FaceLandmark</apiOperationClassifier></apiReturn><apiParam><apiItemName>ofType</apiItemName><apiType value="String"/><apiDesc>The type of the facial landmark.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Returns the landmark, if any, of the given type in this detected face.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.vision:Face:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that holds the discovered relative to the detected image in the view
     coordinate system.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that holds the discovered relative to the detected image in the view
     coordinate system.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:hasHeadEulerAngleY"><apiName>hasHeadEulerAngleY</apiName><shortdesc>
     Indicates whether the detector found the head y euler angle.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Indicates whether the detector found the head y euler angle.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:hasHeadEulerAngleZ"><apiName>hasHeadEulerAngleZ</apiName><shortdesc>
     Indicates whether the detector found the head z euler angle.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Indicates whether the detector found the head z euler angle.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:hasLeftEyeOpenProbability"><apiName>hasLeftEyeOpenProbability</apiName><shortdesc>
     Indicates whether a left eye open probability is available.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Indicates whether a left eye open probability is available.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:hasRightEyeOpenProbability"><apiName>hasRightEyeOpenProbability</apiName><shortdesc>
     Indicates whether a right eye open probability is available.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Indicates whether a right eye open probability is available.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:hasSmilingProbability"><apiName>hasSmilingProbability</apiName><shortdesc>
     Indicates whether a smiling probability is available.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Indicates whether a smiling probability is available.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:hasTrackingId"><apiName>hasTrackingId</apiName><shortdesc>
     Indicates whether the face has a tracking ID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Indicates whether the face has a tracking ID.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:headEulerAngleY"><apiName>headEulerAngleY</apiName><shortdesc>
     Indicates the rotation of the face about the vertical axis of the image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Indicates the rotation of the face about the vertical axis of the image.  Positive y euler angle
     is when the face is turned towards the right side of the image that is being processed.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:headEulerAngleZ"><apiName>headEulerAngleZ</apiName><shortdesc>
     Indicates the rotation of the face about the axis pointing out of the image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Indicates the rotation of the face about the axis pointing out of the image.  Positive z euler
     angle is a counter-clockwise rotation within the image plane.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:landmarks"><apiName>landmarks</apiName><shortdesc>
     All the landmarks.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:FaceLandmark"/></apiValueDef><apiDesc>
     All the landmarks.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:leftEyeOpenProbability"><apiName>leftEyeOpenProbability</apiName><shortdesc>
     Probability that the face's left eye is open.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Probability that the face's left eye is open.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:rightEyeOpenProbability"><apiName>rightEyeOpenProbability</apiName><shortdesc>
     Probability that the face's right eye is open.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Probability that the face's right eye is open.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:smilingProbability"><apiName>smilingProbability</apiName><shortdesc>
     Probability that the face is smiling.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Probability that the face is smiling.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Face:trackingId"><apiName>trackingId</apiName><shortdesc>
     The tracking identifier of the face.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
     The tracking identifier of the face.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:CloudLandmark"><apiName>CloudLandmark</apiName><shortdesc>
 Set of landmark properties identified by a vision cloud detector.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Set of landmark properties identified by a vision cloud detector.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:CloudLandmark:confidence"><apiName>confidence</apiName><shortdesc>
     Overall confidence of the result.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Overall confidence of the result. The value is float, in range [0, 1].
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudLandmark:entityId"><apiName>entityId</apiName><shortdesc>
     Opaque entity ID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API]
     (https://developers.google.com/knowledge-graph/).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudLandmark:frame"><apiName>frame</apiName><shortdesc>
     A rectangle image region to which this landmark belongs to (in the view coordinate system).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     A rectangle image region to which this landmark belongs to (in the view coordinate system).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudLandmark:landmark"><apiName>landmark</apiName><shortdesc>
     Textual description of the landmark.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Textual description of the landmark.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudLandmark:locations"><apiName>locations</apiName><shortdesc>
     The location information for the detected landmark.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:LatitudeLongitude"/></apiValueDef><apiDesc>
     <p>The location information for the detected landmark. Multiple LocationInfo elements can be present
     because one location may indicate the location of the scene in the image, and another location
     may indicate the location of the place where the image was taken.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:TextRecognizedLanguage"><apiName>TextRecognizedLanguage</apiName><shortdesc>
 Detected language from text recognition.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Detected language from text recognition.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:TextRecognizedLanguage:languageCode"><apiName>languageCode</apiName><shortdesc>
      The BCP-47 language code, such as, "en-US" or "sr-Latn".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      The BCP-47 language code, such as, "en-US" or "sr-Latn". For more information, see
      http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:CloudDetectorOptions"><apiName>CloudDetectorOptions</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:CloudDetectorOptions:CloudDetectorOptions"><apiName>CloudDetectorOptions</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:CloudDetectorOptions:apiKeyOverride"><apiName>apiKeyOverride</apiName><shortdesc>
     API key to use for Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     API key to use for Cloud Vision API.  If <codeph>null</codeph>, the default API key from FirebaseApp will be
     used.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudDetectorOptions:enforceCertFingerprintMatch"><apiName>enforceCertFingerprintMatch</apiName><shortdesc>
     Only allow registered application instances with matching certificate fingerprint to use Cloud Vision API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Only allow registered application instances with matching certificate fingerprint to use Cloud Vision API.
     <p>Do not set this for debug build if you use simulators to test.</p>
     <p>Applies to Android only.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudDetectorOptions:maxResults"><apiName>maxResults</apiName><shortdesc>
     Maximum number of results to return.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>10</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Maximum number of results to return.  Defaults to 10.  Does not apply to
     <codeph>CloudTextDetector</codeph> and <codeph>CloudDocumentTextDetector</codeph>.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudDetectorOptions:modelType"><apiName>modelType</apiName><shortdesc>
     Type of model to use in vision cloud detection API.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Type of model to use in vision cloud detection API.  Defaults to <codeph>stable</codeph>.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeContactInfo"><apiName>BarcodeContactInfo</apiName><shortdesc>
 A person's or organization's business card.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A person's or organization's business card. For example, a vCard.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeContactInfo:addresses"><apiName>addresses</apiName><shortdesc>
     Person's or organization's addresses.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:BarcodeAddress"/></apiValueDef><apiDesc>
     Person's or organization's addresses.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeContactInfo:emails"><apiName>emails</apiName><shortdesc>
     Contact emails.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:BarcodeEmail"/></apiValueDef><apiDesc>
     Contact emails.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeContactInfo:jobTitle"><apiName>jobTitle</apiName><shortdesc>
     A job title.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     A job title.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeContactInfo:name"><apiName>name</apiName><shortdesc>
     A person's name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     A person's name.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeContactInfo:organization"><apiName>organization</apiName><shortdesc>
     A business organization.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     A business organization.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeContactInfo:phones"><apiName>phones</apiName><shortdesc>
     Contact phone numbers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:BarcodePhone"/></apiValueDef><apiDesc>
     Contact phone numbers.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeContactInfo:urls"><apiName>urls</apiName><shortdesc>
     Contact URLs.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$String"/></apiValueDef><apiDesc>
     Contact URLs.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:VisionImageMetadata"><apiName>VisionImageMetadata</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:VisionImageMetadata:VisionImageMetadata"><apiName>VisionImageMetadata</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>orientation</apiItemName><apiType value="uint"/><apiData>unknown</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:VisionImageMetadata:orientation:get"><apiName>orientation</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:FaceDetectorContourMode"><apiName>FaceDetectorContourMode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:FaceDetectorContourMode:all"><apiName>all</apiName><shortdesc>
     Face contour mode indicating that the detector performs contour detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face contour mode indicating that the detector performs contour detection.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorContourMode:none"><apiName>none</apiName><shortdesc>
     Face contour mode indicating that the detector performs no contour detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Face contour mode indicating that the detector performs no contour detection.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:DocumentTextSymbol"><apiName>DocumentTextSymbol</apiName><shortdesc>
 A document text symbol recognized in an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A document text symbol recognized in an image.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:DocumentTextSymbol:confidence"><apiName>confidence</apiName><shortdesc>
     The confidence of the recognized document text symbol.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence of the recognized document text symbol.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextSymbol:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that contains the document text symbol relative to the image in the default
     coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that contains the document text symbol relative to the image in the default
     coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextSymbol:recognizedBreak"><apiName>recognizedBreak</apiName><shortdesc>
     The recognized start or end of the document text symbol.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:TextRecognizedBreak</apiValueClassifier></apiValueDef><apiDesc>
     The recognized start or end of the document text symbol.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextSymbol:recognizedLanguages"><apiName>recognizedLanguages</apiName><shortdesc>
     An array of recognized languages in the document text symbol.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextRecognizedLanguage"/></apiValueDef><apiDesc>
     An array of recognized languages in the document text symbol. If no languages are recognized, the
     array is empty.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextSymbol:text"><apiName>text</apiName><shortdesc>
     String representation of the document text symbol that was recognized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the document text symbol that was recognized.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:TextLine"><apiName>TextLine</apiName><shortdesc>
 A text line recognized in an image that consists of an array of elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A text line recognized in an image that consists of an array of elements.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:TextLine:confidence"><apiName>confidence</apiName><shortdesc>
     The confidence of the recognized text line.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence of the recognized text line. The value is <codeph>null</codeph> for all text recognizers except
     for cloud text recognizers with model type <codeph>VisionCloudTextModelType.dense</codeph>.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextLine:cornerPoints"><apiName>cornerPoints</apiName><shortdesc>
     The four corner points of the text line in clockwise order starting with the top left point
     relative to the image in the default coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$flash.geom:Point"/></apiValueDef><apiDesc>
     The four corner points of the text line in clockwise order starting with the top left point
     relative to the image in the default coordinate space. The objects are <codeph>flash.geom.Point</codeph>s.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextLine:elements"><apiName>elements</apiName><shortdesc>
     An array of text elements that make up the line.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextElement"/></apiValueDef><apiDesc>
     An array of text elements that make up the line.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextLine:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that contains the text line relative to the image in the default coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that contains the text line relative to the image in the default coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextLine:recognizedLanguages"><apiName>recognizedLanguages</apiName><shortdesc>
     An array of recognized languages in the text line.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextRecognizedLanguage"/></apiValueDef><apiDesc>
     An array of recognized languages in the text line. On-device text recognizers only detect
     Latin-based languages, while cloud text recognizers can detect multiple languages. If no
     languages are recognized, the array is empty.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:TextLine:text"><apiName>text</apiName><shortdesc>
     String representation of the text line that was recognized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the text line that was recognized.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeFormat"><apiName>BarcodeFormat</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase.vision:BarcodeFormat:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:EAN13"><apiName>EAN13</apiName><shortdesc> EAN-13 detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0020</apiData><apiType value="int"/></apiValueDef><apiDesc> EAN-13 detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:EAN8"><apiName>EAN8</apiName><shortdesc> EAN-8 detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0040</apiData><apiType value="int"/></apiValueDef><apiDesc> EAN-8 detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:ITF"><apiName>ITF</apiName><shortdesc> ITF detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0080</apiData><apiType value="int"/></apiValueDef><apiDesc> ITF detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:PDF417"><apiName>PDF417</apiName><shortdesc> PDF-417 detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0800</apiData><apiType value="int"/></apiValueDef><apiDesc> PDF-417 detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:UPCA"><apiName>UPCA</apiName><shortdesc> UPC-A detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0200</apiData><apiType value="int"/></apiValueDef><apiDesc> UPC-A detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:UPCE"><apiName>UPCE</apiName><shortdesc> UPC-E detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0400</apiData><apiType value="int"/></apiValueDef><apiDesc> UPC-E detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:all"><apiName>all</apiName><shortdesc> All format.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0xFFFF</apiData><apiType value="int"/></apiValueDef><apiDesc> All format.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:aztec"><apiName>aztec</apiName><shortdesc> Aztec code detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x1000</apiData><apiType value="int"/></apiValueDef><apiDesc> Aztec code detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:codaBar"><apiName>codaBar</apiName><shortdesc> Codabar detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0008</apiData><apiType value="int"/></apiValueDef><apiDesc> Codabar detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:code128"><apiName>code128</apiName><shortdesc> Code-128 detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="int"/></apiValueDef><apiDesc> Code-128 detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:code39"><apiName>code39</apiName><shortdesc> Code-39 detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="int"/></apiValueDef><apiDesc> Code-39 detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:code93"><apiName>code93</apiName><shortdesc> Code-93 detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="int"/></apiValueDef><apiDesc> Code-93 detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:dataMatrix"><apiName>dataMatrix</apiName><shortdesc> Data Matrix detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0010</apiData><apiType value="int"/></apiValueDef><apiDesc> Data Matrix detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:qrCode"><apiName>qrCode</apiName><shortdesc> QR Code detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0100</apiData><apiType value="int"/></apiValueDef><apiDesc> QR Code detection.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeFormat:unknown"><apiName>unknown</apiName><shortdesc> Unknown format.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> Unknown format. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeCalendarEvent"><apiName>BarcodeCalendarEvent</apiName><shortdesc>
 A calendar event extracted from a QR code.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A calendar event extracted from a QR code.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeCalendarEvent:end"><apiName>end</apiName><shortdesc>
     Calendar event end date.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Date"/></apiValueDef><apiDesc>
     Calendar event end date.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeCalendarEvent:eventDescription"><apiName>eventDescription</apiName><shortdesc>
     Calendar event description.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Calendar event description.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeCalendarEvent:location"><apiName>location</apiName><shortdesc>
     Calendar event location.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Calendar event location.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeCalendarEvent:organizer"><apiName>organizer</apiName><shortdesc>
     Clendar event organizer.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Clendar event organizer.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeCalendarEvent:start"><apiName>start</apiName><shortdesc>
     Calendar event start date.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Date"/></apiValueDef><apiDesc>
     Calendar event start date.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeCalendarEvent:status"><apiName>status</apiName><shortdesc>
     Calendar event status.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Calendar event status.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeCalendarEvent:summary"><apiName>summary</apiName><shortdesc>
     Calendar event summary.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     Calendar event summary.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:CloudTextModelType"><apiName>CloudTextModelType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:CloudTextModelType:CloudTextModelType"><apiName>CloudTextModelType</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:CloudTextModelType:dense"><apiName>dense</apiName><shortdesc>
     Dense or document text cloud model type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Dense or document text cloud model type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:CloudTextModelType:sparse"><apiName>sparse</apiName><shortdesc>
     Sparse or regular text cloud model type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Sparse or regular text cloud model type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeWiFiEncryptionType"><apiName>BarcodeWiFiEncryptionType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeWiFiEncryptionType:WEP"><apiName>WEP</apiName><shortdesc>
     Barcode WEP Wi-Fi encryption type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode WEP Wi-Fi encryption type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeWiFiEncryptionType:WPA"><apiName>WPA</apiName><shortdesc>
     Barcode WPA Wi-Fi encryption type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode WPA Wi-Fi encryption type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeWiFiEncryptionType:open"><apiName>open</apiName><shortdesc>
     Barcode open Wi-Fi encryption type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Barcode open Wi-Fi encryption type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeWiFiEncryptionType:unknown"><apiName>unknown</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:Text"><apiName>Text</apiName><shortdesc>
 Recognized text in an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Recognized text in an image.
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:Text:Text"><apiName>Text</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.vision:Text:blocks"><apiName>blocks</apiName><shortdesc>
     An array of blocks recognized in the text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextBlock"/></apiValueDef><apiDesc>
     An array of blocks recognized in the text.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:Text:text"><apiName>text</apiName><shortdesc>
     String representation of the recognized text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the recognized text.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:DetectorImageOrientation"><apiName>DetectorImageOrientation</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:bottomLeft"><apiName>bottomLeft</apiName><shortdesc> Orientation code indicating the 0th row is the bottom and the 0th column is the left side.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the bottom and the 0th column is the left side.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:bottomRight"><apiName>bottomRight</apiName><shortdesc> Orientation code indicating the 0th row is the bottom and the 0th column is the right side.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the bottom and the 0th column is the right side.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:leftBottom"><apiName>leftBottom</apiName><shortdesc> Orientation code indicating the 0th row is the left side and the 0th column is the bottom.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the left side and the 0th column is the bottom. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:leftTop"><apiName>leftTop</apiName><shortdesc> Orientation code indicating the 0th row is the left side and the 0th column is the top.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the left side and the 0th column is the top.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:rightBottom"><apiName>rightBottom</apiName><shortdesc> Orientation code indicating the 0th row is the right side and the 0th column is the bottom.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the right side and the 0th column is the bottom.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:rightTop"><apiName>rightTop</apiName><shortdesc> Orientation code indicating the 0th row is the right side and the 0th column is the top.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the right side and the 0th column is the top.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:topLeft"><apiName>topLeft</apiName><shortdesc> Orientation code indicating the 0th row is the top and the 0th column is the left side.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the top and the 0th column is the left side.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DetectorImageOrientation:topRight"><apiName>topRight</apiName><shortdesc> Orientation code indicating the 0th row is the top and the 0th column is the right side.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc> Orientation code indicating the 0th row is the top and the 0th column is the right side. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeAddress"><apiName>BarcodeAddress</apiName><shortdesc>
 An address.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 An address.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeAddress:addressLines"><apiName>addressLines</apiName><shortdesc>
     Formatted address, containing multiple lines when appropriate.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$String"/></apiValueDef><apiDesc>
     Formatted address, containing multiple lines when appropriate.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeAddress:type"><apiName>type</apiName><shortdesc>
     Address type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
     Address type.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:BarcodeGeoPoint"><apiName>BarcodeGeoPoint</apiName><shortdesc>
 GPS coordinates from a 'GEO:' or similar QR Code type data.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 GPS coordinates from a 'GEO:' or similar QR Code type data.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:BarcodeGeoPoint:latitude:get"><apiName>latitude</apiName><shortdesc>
     A location latitude.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     A location latitude.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:BarcodeGeoPoint:longitude:get"><apiName>longitude</apiName><shortdesc>
     A location longitude.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     A location longitude.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:FaceLandmarkType"><apiName>FaceLandmarkType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:leftCheek"><apiName>leftCheek</apiName><shortdesc> Left cheek.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LeftCheek</apiData><apiType value="String"/></apiValueDef><apiDesc> Left cheek. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:leftEar"><apiName>leftEar</apiName><shortdesc> Midpoint of the left ear tip and left ear lobe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LeftEar</apiData><apiType value="String"/></apiValueDef><apiDesc> Midpoint of the left ear tip and left ear lobe. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:leftEye"><apiName>leftEye</apiName><shortdesc> Left eye.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>LeftEye</apiData><apiType value="String"/></apiValueDef><apiDesc> Left eye. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:mouthBottom"><apiName>mouthBottom</apiName><shortdesc> Center of the bottom lip.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>MouthBottom</apiData><apiType value="String"/></apiValueDef><apiDesc> Center of the bottom lip. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:mouthLeft"><apiName>mouthLeft</apiName><shortdesc> Left corner of the mouth </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>MouthLeft</apiData><apiType value="String"/></apiValueDef><apiDesc> Left corner of the mouth </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:mouthRight"><apiName>mouthRight</apiName><shortdesc> Right corner of the mouth </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>MouthRight</apiData><apiType value="String"/></apiValueDef><apiDesc> Right corner of the mouth </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:noseBase"><apiName>noseBase</apiName><shortdesc> Midpoint between the nostrils where the nose meets the face.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>NoseBase</apiData><apiType value="String"/></apiValueDef><apiDesc> Midpoint between the nostrils where the nose meets the face. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:rightCheek"><apiName>rightCheek</apiName><shortdesc> Right cheek.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>RightCheek</apiData><apiType value="String"/></apiValueDef><apiDesc> Right cheek. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:rightEar"><apiName>rightEar</apiName><shortdesc> Midpoint of the right ear tip and right ear lobe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>RightEar</apiData><apiType value="String"/></apiValueDef><apiDesc> Midpoint of the right ear tip and right ear lobe. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmarkType:rightEye"><apiName>rightEye</apiName><shortdesc> Right eye.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>RightEye</apiData><apiType value="String"/></apiValueDef><apiDesc> Right eye. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:DocumentText"><apiName>DocumentText</apiName><shortdesc>
 Recognized document text in an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Recognized document text in an image.
 </apiDesc></apiClassifierDetail><apiOperation id="com.tuarua.firebase.vision:DocumentText:dispose"><apiName>dispose</apiName><shortdesc>
     Disposes the native code associated with this DocumentText.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Disposes the native code associated with this DocumentText.
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.vision:DocumentText:text"><apiName>text</apiName><shortdesc>
     String representation of the recognized document text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the recognized document text.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentText:blocks:get"><apiName>blocks</apiName><shortdesc>
     An array of blocks recognized in the document text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$com.tuarua.firebase.vision:DocumentTextBlock"/></apiValueDef><apiDesc>
     An array of blocks recognized in the document text.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:DocumentTextParagraph"><apiName>DocumentTextParagraph</apiName><shortdesc>
 A document text paragraph recognized in an image that consists of an array of words.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A document text paragraph recognized in an image that consists of an array of words.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:DocumentTextParagraph:confidence"><apiName>confidence</apiName><shortdesc>
     The confidence of the recognized document text paragraph.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     The confidence of the recognized document text paragraph.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextParagraph:frame"><apiName>frame</apiName><shortdesc>
     The rectangle that contains the document text paragraph relative to the image in the default
     coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
     The rectangle that contains the document text paragraph relative to the image in the default
     coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextParagraph:recognizedBreak"><apiName>recognizedBreak</apiName><shortdesc>
     The recognized start or end of the document text paragraph.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.vision:TextRecognizedBreak</apiValueClassifier></apiValueDef><apiDesc>
     The recognized start or end of the document text paragraph.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextParagraph:recognizedLanguages"><apiName>recognizedLanguages</apiName><shortdesc>
     An array of recognized languages in the document text paragraph.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.vision:TextRecognizedLanguage"/></apiValueDef><apiDesc>
     An array of recognized languages in the document text paragraph. If no languages are recognized,
     the array is empty.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextParagraph:text"><apiName>text</apiName><shortdesc>
     String representation of the document text paragraph that was recognized.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     String representation of the document text paragraph that was recognized.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:DocumentTextParagraph:words:get"><apiName>words</apiName><shortdesc>
     An array of words in the document text paragraph.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$com.tuarua.firebase.vision:DocumentTextWord"/></apiValueDef><apiDesc>
     An array of words in the document text paragraph.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:FaceLandmark"><apiName>FaceLandmark</apiName><shortdesc>
 A landmark on a human face detected in an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A landmark on a human face detected in an image.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:FaceLandmark:position:get"><apiName>position</apiName><shortdesc>
     2D position of the facial landmark.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.firebase.vision:VisionPoint</apiValueClassifier></apiValueDef><apiDesc>
     2D position of the facial landmark.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceLandmark:type:get"><apiName>type</apiName><shortdesc>
     The type of the facial landmark.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
     The type of the facial landmark.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:FaceDetectorOptions"><apiName>FaceDetectorOptions</apiName><shortdesc>
 Options for specifying a face detector.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Options for specifying a face detector.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.firebase.vision:FaceDetectorOptions:classificationMode"><apiName>classificationMode</apiName><shortdesc>
     Whether to run additional classifiers for characterizing attributes such as smiling.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Whether to run additional classifiers for characterizing attributes such as smiling. Defaults to
     FaceDetectorClassificationMode.none.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorOptions:contourMode"><apiName>contourMode</apiName><shortdesc>
     The face detector contour mode that determines the type of contour results returned by detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     The face detector contour mode that determines the type of contour results returned by detection.
     Defaults to FaceDetectorContourMode.none.
     
     <p>The following detection results are returned when setting this mode to <codeph>.all</codeph>:</p>
     
     <p><codeph>performanceMode</codeph> set to <codeph>.fast</codeph>, and both <codeph>classificationMode</codeph>
     and <codeph>landmarkMode</codeph> set to
     <codeph>.none</codeph>, then only the prominent face will be returned with detected contours.</p>
     
     <p><codeph>performanceMode</codeph> set to <codeph>.accurate</codeph>, or if <codeph>classificationMode</codeph>
     or <codeph>landmarkMode</codeph> is set to
     <codeph>.all</codeph>, then all detected faces will be returned, but only the prominent face will have
     detecteted contours.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorOptions:isTrackingEnabled"><apiName>isTrackingEnabled</apiName><shortdesc>
     Whether the face tracking feature is enabled in face detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Whether the face tracking feature is enabled in face detection. Defaults to false.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorOptions:landmarkMode"><apiName>landmarkMode</apiName><shortdesc>
     Whether to detect no landmarks or all landmarks in face detection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     <p>Whether to detect no landmarks or all landmarks in face detection. Processing time increases as
     the number of landmarks to search for increases, so detecting all landmarks will increase the
     overall detection time. Defaults to FaceDetectorLandmarkMode.none.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorOptions:minFaceSize"><apiName>minFaceSize</apiName><shortdesc>
     The smallest desired face size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0.1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
     <p>The smallest desired face size. The size is expressed as a proportion of the width of the head to
     the image width. For example, if a value of 0.1 is specified, then the smallest face to search
     for is roughly 10% of the width of the image being searched. Defaults to 0.1.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.vision:FaceDetectorOptions:performanceMode"><apiName>performanceMode</apiName><shortdesc>
     Preference for accuracy vs.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
     Preference for accuracy vs. speed trade-offs in face detection.  Defaults to
     FaceDetectorPerformanceMode.fast.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.vision:VisionImage"><apiName>VisionImage</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.vision:VisionImage:VisionImage"><apiName>VisionImage</apiName><shortdesc>
     Initializes a VisionImage object with the given image.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>bitmapdata</apiItemName><apiType value="flash.display:BitmapData"/><apiData>null</apiData><apiDesc>BitmapData to use in vision detection. The given image should be rotated, so its
     orientation up. Set to null if using the path param.
     </apiDesc></apiParam><apiParam><apiItemName>path</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>File path to image file
     </apiDesc></apiParam><apiParam><apiItemName>metadata</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImageMetadata</apiOperationClassifier><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Initializes a VisionImage object with the given image.
     
     </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage>