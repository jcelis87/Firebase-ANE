<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.firebase"><apiName>com.tuarua.firebase</apiName><apiDetail/><apiClassifier id="com.tuarua.firebase:CloudLandmarkDetector"><apiName>CloudLandmarkDetector</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:CloudLandmarkDetector:detect"><apiName>detect</apiName><shortdesc>
     Detects landmark in a given image.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to use for detecting landmark.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue with landmark detected or error.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Detects landmark in a given image.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:CloudLandmarkDetector:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionLandmarkANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:CloudLandmarkDetector:options:set"><apiName>options</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>com.tuarua.firebase.vision:CloudDetectorOptions</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:BarcodeError"><apiName>BarcodeError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase:BarcodeError:BarcodeError"><apiName>BarcodeError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase:LabelError"><apiName>LabelError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase:LabelError:LabelError"><apiName>LabelError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase:FaceError"><apiName>FaceError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase:FaceError:FaceError"><apiName>FaceError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase:CloudDocumentRecognizer"><apiName>CloudDocumentRecognizer</apiName><shortdesc>
 A cloud document text recognizer that recognizes text in an image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 A cloud document text recognizer that recognizes text in an image.
 </apiDesc></apiClassifierDetail><apiOperation id="com.tuarua.firebase:CloudDocumentRecognizer:process"><apiName>process</apiName><shortdesc>
     Processes the given image for cloud document text recognition.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to process for recognizing document text.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue when document text recognition
         completes.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Processes the given image for cloud document text recognition.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:CloudDocumentRecognizer:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionCloudDocumentANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:CloudDocumentRecognizer:options:set"><apiName>options</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>com.tuarua.firebase.vision:CloudDocumentRecognizerOptions</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:CloudLabelError"><apiName>CloudLabelError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase:CloudLabelError:CloudLabelError"><apiName>CloudLabelError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase:LandmarkError"><apiName>LandmarkError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase:LandmarkError:LandmarkError"><apiName>LandmarkError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase:VisionANE"><apiName>VisionANE</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:VisionANE:barcodeDetector"><apiName>barcodeDetector</apiName><shortdesc>
     Gets a barcode detector with the given options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A barcode detector configured with the given options.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:BarcodeDetector</apiOperationClassifier></apiReturn><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:BarcodeDetectorOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Options containing barcode detector configuration.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Gets a barcode detector with the given options.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:cloudDocumentTextRecognizer"><apiName>cloudDocumentTextRecognizer</apiName><shortdesc>
     Gets a cloud document text recognizer configured with the given options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A document text recognizer configured with the given options.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:CloudDocumentRecognizer</apiOperationClassifier></apiReturn><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:CloudDocumentRecognizerOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Options for configuring the cloud document text recognizer.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Gets a cloud document text recognizer configured with the given options.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:cloudLabelDetector"><apiName>cloudLabelDetector</apiName><shortdesc>
     Gets an instance of cloud label detector with the given options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A cloud label detector configured with the given options.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:CloudLabelDetector</apiOperationClassifier></apiReturn><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:CloudDetectorOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Options for configuring the cloud label detector.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Gets an instance of cloud label detector with the given options.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:cloudLandmarkDetector"><apiName>cloudLandmarkDetector</apiName><shortdesc>
     Gets an instance of cloud landmark detector with the given options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A cloud landmark detector configured with the given options.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:CloudLandmarkDetector</apiOperationClassifier></apiReturn><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:CloudDetectorOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Options for configuring the cloud landmark detector.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Gets an instance of cloud landmark detector with the given options.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:cloudTextRecognizer"><apiName>cloudTextRecognizer</apiName><shortdesc>
     Gets a cloud text recognizer configured with the given options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A text recognizer configured with the given options.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:CloudTextRecognizer</apiOperationClassifier></apiReturn><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:CloudTextRecognizerOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Options for configuring the cloud text recognizer.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Gets a cloud text recognizer configured with the given options.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:dispose"><apiName>dispose</apiName><shortdesc> Disposes the ANE and any Detector ANEs.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Disposes the ANE and any Detector ANEs. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:faceDetector"><apiName>faceDetector</apiName><shortdesc>
     Gets a face detector with the given options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A face detector configured with the given options.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:FaceDetector</apiOperationClassifier></apiReturn><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:FaceDetectorOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Options for configuring the face detector.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Gets a face detector with the given options.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:labelDetector"><apiName>labelDetector</apiName><shortdesc>
     Gets a label detector with the given options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A label detector configured with the given options.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:LabelDetector</apiOperationClassifier></apiReturn><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:LabelDetectorOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Options for configuring the label detector.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Gets a label detector with the given options.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:onDeviceTextRecognizer"><apiName>onDeviceTextRecognizer</apiName><shortdesc>
     Gets an on-device text recognizer.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A text recognizer.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase:TextRecognizer</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
     Gets an on-device text recognizer.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:VisionANE:requestPermissions"><apiName>requestPermissions</apiName><shortdesc> Requests permissions for this ANE.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Requests permissions for this ANE. </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:VisionANE:vision:get"><apiName>vision</apiName><shortdesc> The Vision ANE instance.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.firebase:VisionANE</apiValueClassifier></apiValueDef><apiDesc> The Vision ANE instance. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:BarcodeDetector"><apiName>BarcodeDetector</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:BarcodeDetector:detect"><apiName>detect</apiName><shortdesc>
     Detects barcodes in the given image.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to use for detecting barcodes.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue with barcodes detected or error.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Detects barcodes in the given image.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:BarcodeDetector:inputFromCamera"><apiName>inputFromCamera</apiName><shortdesc>
     Opens the Camera, scans for and detects a barcode.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue with barcodes detected.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Opens the Camera, scans for and detects a barcode.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:BarcodeDetector:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionBarcodeANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:BarcodeDetector:isCameraSupported:get"><apiName>isCameraSupported</apiName><shortdesc> Whether the camera is supported on users version of Android.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Whether the camera is supported on users version of Android. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:BarcodeDetector:options:set"><apiName>options</apiName><shortdesc> Options containing barcode detector configuration.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>com.tuarua.firebase.vision:BarcodeDetectorOptions</apiValueClassifier></apiValueDef><apiDesc> Options containing barcode detector configuration. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:CloudLabelDetector"><apiName>CloudLabelDetector</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:CloudLabelDetector:detect"><apiName>detect</apiName><shortdesc>
     Detects labels in a given image.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to use when searching labels.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue with label detected or error.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Detects labels in a given image.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:CloudLabelDetector:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionCloudLabelANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:CloudLabelDetector:options:set"><apiName>options</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>com.tuarua.firebase.vision:CloudDetectorOptions</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:LabelDetector"><apiName>LabelDetector</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase:LabelDetector:LabelDetector"><apiName>LabelDetector</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:LabelDetectorOptions</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.firebase:LabelDetector:detect"><apiName>detect</apiName><shortdesc>
     Detects labels in a given image.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to use for detecting labels.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue with labels detected or error.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Detects labels in a given image.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:LabelDetector:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionLabelANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:LabelDetector:closures"><apiName>closures</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="flash.utils:Dictionary"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:LabelDetector:options:set"><apiName>options</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>com.tuarua.firebase.vision:LabelDetectorOptions</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:FaceDetector"><apiName>FaceDetector</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:FaceDetector:detect"><apiName>detect</apiName><shortdesc>
     Detects faces in a given image.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to use for detecting faces.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue with faces detected or error.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Detects faces in a given image.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:FaceDetector:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionFaceANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:FaceDetector:options:set"><apiName>options</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>com.tuarua.firebase.vision:FaceDetectorOptions</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:TextRecognizer"><apiName>TextRecognizer</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:TextRecognizer:process"><apiName>process</apiName><shortdesc>
     Detects texts in the given image.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to use for detecting texts.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue with texts detected or error.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Detects texts in the given image.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:TextRecognizer:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionTextANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase:CloudTextRecognizer"><apiName>CloudTextRecognizer</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:CloudTextRecognizer:process"><apiName>process</apiName><shortdesc>
     Processes the given image for on-device or cloud text recognition.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>image</apiItemName><apiOperationClassifier>com.tuarua.firebase.vision:VisionImage</apiOperationClassifier><apiDesc>The image to process for recognizing text.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Closure to call back on the main queue when text recognition completes.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Processes the given image for on-device or cloud text recognition.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:CloudTextRecognizer:com.tuarua.firebase:NAME"><apiName>NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>VisionCloudTextANE</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:CloudTextRecognizer:options:set"><apiName>options</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>com.tuarua.firebase.vision:CloudTextRecognizerOptions</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>